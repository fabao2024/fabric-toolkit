import os
import subprocess
from datetime import datetime

# Fun√ß√µes utilit√°rias
def executar_comando(cmd):
    resultado = subprocess.run(cmd, capture_output=True, text=True, shell=True)
    return resultado.stdout.strip(), resultado.stderr.strip(), resultado.returncode

def limpar_tela():
    os.system('clear' if os.name == 'posix' else 'cls')

# Idiomas dispon√≠veis
IDIOMAS = {
    "pt": {
        "lang_code": "pt",
        "idioma_nome": "Portugu√™s",
        "menu": "üß† FABRIC TOOLKIT - MENU\n-------------------------\n"
                "1. Input manual + extract_wisdom\n"
                "2. Transcri√ß√£o de v√≠deo do YouTube\n"
                "3. Scrape de site (URL)\n"
                "4. Listar padr√µes (skills)\n"
                "5. Limpar contexto\n"
                "6. Limpar sess√£o\n"
                "0. Sair",
        "explicacoes": {
            "1": "‚úèÔ∏è Op√ß√£o 1: Input manual\nVoc√™ digita uma pergunta ou comando e a IA responde com base no padr√£o 'extract_wisdom'.",
            "2": "üé• Op√ß√£o 2: Transcri√ß√£o de v√≠deo\nVoc√™ fornece uma URL de v√≠deo do YouTube e a IA ir√° transcrev√™-lo e resumi-lo.",
            "3": "üåê Op√ß√£o 3: Scrape de site (URL)\nVoc√™ fornece uma URL e o conte√∫do textual ser√° extra√≠do e analisado pela IA.",
            "4": "üé® Op√ß√£o 4: Listar padr√µes\nA IA mostrar√° todos os padr√µes (skills) dispon√≠veis atualmente.",
            "5": "üßπ Op√ß√£o 5: Limpar contexto\nRemove o hist√≥rico de conversas da sess√£o atual.",
            "6": "üîÑ Op√ß√£o 6: Limpar sess√£o\nReinicia completamente a sess√£o da IA."
        },
        "perguntas": {
            "prompt": "\nDigite seu prompt para o Fabric:\n> ",
            "url_video": "\nüé• Cole a URL do v√≠deo do YouTube:\n> ",
            "url_site": "\nDigite a URL do site:\n> "
        },
        "mensagens": {
            "resposta_ia": "\nüß† RESPOSTA DA IA:\n",
            "erro_execucao": "Erro ao executar o comando Fabric:\n",
            "erro_yt": "\n‚ùå yt-dlp falhou:",
            "limpou_contexto": "\nContexto limpo.",
            "limpou_sessao": "\nSess√£o limpa.",
            "opcao_invalida": "Op√ß√£o inv√°lida.",
            "pressione_enter": "\nPressione Enter para continuar..."
        }
    },
    "en": {
        "lang_code": "en",
        "idioma_nome": "English",
        "menu": "üß† FABRIC TOOLKIT - MENU\n-------------------------\n"
                "1. Manual input + extract_wisdom\n"
                "2. YouTube video transcription\n"
                "3. Website scraping (URL)\n"
                "4. List patterns (skills)\n"
                "5. Clear context\n"
                "6. Reset session\n"
                "0. Exit",
        "explicacoes": {
            "1": "‚úèÔ∏è Option 1: Manual input\nYou type a question or command, and the AI will respond based on the 'extract_wisdom' pattern.",
            "2": "üé• Option 2: Video transcription\nYou provide a YouTube video URL, and the AI will transcribe and summarize it.",
            "3": "üåê Option 3: Website scraping\nYou provide a URL, and the textual content will be extracted and analyzed by the AI.",
            "4": "üé® Option 4: List patterns\nThe AI will show all available skills (patterns).",
            "5": "üßπ Option 5: Clear context\nThis removes the conversation history for the current session.",
            "6": "üîÑ Option 6: Reset session\nFully restarts the AI session."
        },
        "perguntas": {
            "prompt": "\nEnter your prompt for Fabric:\n> ",
            "url_video": "\nüé• Paste the YouTube video URL:\n> ",
            "url_site": "\nEnter the website URL:\n> "
        },
        "mensagens": {
            "resposta_ia": "\nüß† AI RESPONSE:\n",
            "erro_execucao": "Error running Fabric command:\n",
            "erro_yt": "\n‚ùå yt-dlp failed:",
            "limpou_contexto": "\nContext cleared.",
            "limpou_sessao": "\nSession reset.",
            "opcao_invalida": "Invalid option.",
            "pressione_enter": "\nPress Enter to continue..."
        }
    }
}

# Selecionar idioma
def selecionar_idioma():
    limpar_tela()
    print("üåê Selecione o idioma / Select your language:")
    print("1. Portugu√™s (pt-BR)")
    print("2. English (EN)")
    escolha = input("Escolha (1 ou 2): ").strip()
    if escolha == "1":
        return "pt"
    elif escolha == "2":
        return "en"
    else:
        print("Op√ß√£o inv√°lida. Usando Portugu√™s.")
        return "pt"

# Fun√ß√µes principais
def entrada_manual(config):
    print(config["explicacoes"]["1"])
    texto = input(config["perguntas"]["prompt"])
    cmd = f"fabric --model gpt-4o -sp extract_wisdom -v='#lang:{config['lang_code']} #input:{texto}'"
    saida, erro, codigo = executar_comando(cmd)
    if codigo == 0:
        print(config["mensagens"]["resposta_ia"])
        print(saida)
    else:
        print(config["mensagens"]["erro_execucao"], erro)

def transcrever_video_youtube(config):
    print(config["explicacoes"]["2"])
    url = input(config["perguntas"]["url_video"])
    cmd = f"fabric --youtube={url} --model gpt-4o -sp extract_wisdom -v='#lang:{config['lang_code']}'"
    saida, erro, codigo = executar_comando(cmd)
    if codigo == 0:
        print(config["mensagens"]["resposta_ia"])
        print(saida)
    else:
        print(config["mensagens"]["erro_yt"], erro)

def scrape_site(config):
    print(config["explicacoes"]["3"])
    url = input(config["perguntas"]["url_site"])
    cmd = f"fabric --model gpt-4o -u {url} -sp extract_wisdom -v='#lang:{config['lang_code']}'"
    saida, erro, codigo = executar_comando(cmd)
    if codigo == 0:
        print(config["mensagens"]["resposta_ia"])
        print(saida)
    else:
        print(config["mensagens"]["erro_execucao"], erro)

def listar_padroes(config):
    print(config["explicacoes"]["4"])
    cmd = "fabric --listpatterns"
    saida, erro, codigo = executar_comando(cmd)
    print("\nüé®")
    print(saida if codigo == 0 else erro)

def limpar_contexto(config):
    print(config["explicacoes"]["5"])
    executar_comando("fabric --wipecontext")
    print(config["mensagens"]["limpou_contexto"])

def limpar_sessao(config):
    print(config["explicacoes"]["6"])
    executar_comando("fabric --wipesession")
    print(config["mensagens"]["limpou_sessao"])

# Menu principal
def main():
    lang = selecionar_idioma()
    config = IDIOMAS[lang]
    print(f"\n‚úÖ Idioma definido como: {config['idioma_nome'].upper()}\n")
    
    while True:
        print(config["menu"])
        opcao = input("Escolha uma op√ß√£o: ").strip()

        if opcao == "1": entrada_manual(config)
        elif opcao == "2": transcrever_video_youtube(config)
        elif opcao == "3": scrape_site(config)
        elif opcao == "4": listar_padroes(config)
        elif opcao == "5": limpar_contexto(config)
        elif opcao == "6": limpar_sessao(config)
        elif opcao == "0": break
        else: print(config["mensagens"]["opcao_invalida"])

        input(config["mensagens"]["pressione_enter"])
        limpar_tela()

if __name__ == "__main__":
    main()
